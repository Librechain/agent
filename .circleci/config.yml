version: 2
jobs:
  build_amazon_linux:
    docker:
      - image: amazonlinux:2
    steps:
      - checkout
      - run:
          name: Install deps
          command: |
            yum install -y python3 git  libffi-devel python3-devel systemd-devel python3-rpm ruby-devel gcc gcc-c++ make rpm-build rubygems openssl-devel which tar gzip procps
            gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
            curl -sSL https://get.rvm.io | bash -s stable
            gem install --no-document specific_install
            gem specific_install -l https://github.com/mohd-akram/fpm.git -b rpm-systemd
            pip3 install -U pip wheel setuptools
      - run:
          name: Build rpms
          command: |
            pkgs=(certifi
            cffi
            chardet
            cryptography
            idna
            netifaces
            psutil
            pyopenssl
            python-iptables
            requests
            sh
            pytz
            setuptools
            systemd-python
            ply
            six
            pycparser
            urllib3)

            fpm_cmd="fpm -s python -t rpm --python-bin python3 --python-pip pip3 --log info --python-package-name-prefix=python3 -d python3"
            for p in ${pkgs[@]}; do
              $fpm_cmd $p
            done

            mkdir -p /opt/wott/bin
            cp misc/pass_hashes.txt /opt/wott/
            cp debian/wott-agent-self-update.sh /opt/wott/bin/
            $fpm_cmd -d python3-rpm --config-files /opt/wott/pass_hashes.txt \
                                    --config-files /opt/wott/bin/wott-agent-self-update.sh \
                                    --rpm-systemd debian/wott-agent.service \
                                    --rpm-systemd debian/wott-agent-self-update.service \
                                    --rpm-systemd debian/wott-agent-self-update.timer \
                                    --python-install-bin /usr/bin \
                                    --after-install bin/wott-agent-install.sh \
                                    --before-remove bin/wott-agent-remove.sh \
                                    --after-upgrade bin/wott-agent-upgrade.sh \
                                    ./setup.py
            mkdir -p /tmp/rpm/amzn
            mv *.rpm /tmp/rpm/amzn/
      - store_artifacts:
          path: /tmp/rpm
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
            bash --login -c "
              rvm install ruby-2.2
              rvm --default use ruby-2.2
              gem install rake package_cloud
              package_cloud push wott/agent/el/7 /tmp/rpm/amzn/*.rpm --skip-errors
            "
            fi

  build_debian_stretch:
    docker:
      - image: debian:stretch
    steps:
      - checkout
      - run:
          name: Install Python deps
          command: |
            apt update
            apt install -y python3-pip python3-netifaces python3-requests python3-tz python3-iptables python3-systemd \
            python3-psutil python3-apt python3-selinux python3-apparmor python3-sh devscripts python3-all ruby-dev
            pip3 install -r requirements-dev.txt
      - run:
          name: Run linting and metrics
          command: |
            flake8 ./ --exclude=venv --ignore=E501,W503 --output-file test-reports
      - run:
          name: Run tests
          command: |
            pytest --cov=agent
      - run:
          name: Build dpkg packages
          command: |
            mkdir -p /tmp/deb/jessie /tmp/deb/stretch /tmp/deb/buster
            python3 -c 'import version; version.write_changelog()'

            debuild -e CIRCLE_BUILD_NUM --set-envvar=EXTRA_DEPS=python3-distutils -i -us -uc -b
            mv ../*.deb /tmp/deb/buster

            debuild -e CIRCLE_BUILD_NUM -i -us -uc -b
            mv ../*.deb /tmp/deb/stretch

            cp -v debian/jessie/* debian/
            debuild -e CIRCLE_BUILD_NUM -i -us -uc -b
            mv ../*.deb /tmp/deb/jessie
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              gem install rake package_cloud
              for distro in debian/buster raspbian/buster ubuntu/bionic; do
                package_cloud push wott/agent/$distro /tmp/deb/buster/*.deb
              done
              for distro in debian/stretch raspbian/stretch ubuntu/xenial; do
                package_cloud push wott/agent/$distro /tmp/deb/stretch/*.deb
              done
              for distro in debian/jessie raspbian/jessie ubuntu/trusty; do
                package_cloud push wott/agent/$distro /tmp/deb/jessie/*.deb
              done
            fi
      - store_artifacts:
          path: test-reports
          destination: test-reports
      - store_artifacts:
          path: /tmp/deb
workflows:
  version: 2
  build_all:
    jobs:
      - build_amazon_linux
      - build_debian_stretch
